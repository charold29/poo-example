import Exercises.ComplexNumber;

import javax.swing.*;

public class pooApplication {

    public static void sumComplexNumbers(ComplexNumber c1, ComplexNumber c2) {
        int part1Final = c1.getPart1() + c2.getPart1();
        int part2Final = c1.getPart2() + c2.getPart2();

        JOptionPane.showMessageDialog(null, new ComplexNumber(part1Final,part2Final));
    }

    public static void multiComplexNumbers(ComplexNumber c1, ComplexNumber c2) {
        int part1Final = c1.getPart1() * c2.getPart1() - (c1.getPart2() * c2.getPart2());
        int part2Final = (c1.getPart1() * c2.getPart2()) + (c1.getPart2() * c2.getPart1());

        JOptionPane.showMessageDialog(null, new ComplexNumber(part1Final,part2Final));
    }

    public static void compareComplexNumbers(ComplexNumber c1, ComplexNumber c2) {
        if( c1.getPart1() == c2.getPart1() && c1.getPart2() == c2.getPart2()){
            JOptionPane.showMessageDialog(null, ("The numbers are the same."));
        }else{
            JOptionPane.showMessageDialog(null, ("The numbers are different."));
        }
    }

    public static void multiComplexWithInteger(int p1, int p2, int n){
        int part1Final = (p1 * n);
        int part2Final = (p2 * n);

        JOptionPane.showMessageDialog(null, new ComplexNumber(part1Final,part2Final));
    }

    public static void enterNumbers(ComplexNumber[] complexArray) {

        for(int i = 0; i < complexArray.length; i++){
            int part1 = Integer.parseInt(JOptionPane.showInputDialog("Complex Number " + (i+1) + ": \nType part 1:"));
            int part2 = Integer.parseInt(JOptionPane.showInputDialog("Type part 2:"));
            complexArray[i] = new ComplexNumber(part1,part2);
        }

    }

    public static void main (String[] args) {

        ComplexNumber[] complexs = new ComplexNumber[2];

        int option;
        do {
            option = Integer.parseInt(JOptionPane.showInputDialog("Choose an option:\n" +
                    "(1) Sum 2 complex numbers\n" +
                    "(2) Multiply 2 complex numbers\n" +
                    "(3) Compare 2 complex numbers\n" +
                    "(4) Multiply 1 complex number with an integer\n" +
                    "(5) Exit"));
            switch (option){
                case 1:
                    enterNumbers(complexs);
                    sumComplexNumbers(complexs[0],complexs[1]);
                    break;
                case 2:
                    enterNumbers(complexs);
                    multiComplexNumbers(complexs[0],complexs[1]);
                    break;
                case 3:
                    enterNumbers(complexs);
                    compareComplexNumbers(complexs[0],complexs[1]);
                    break;
                case 4:
                    int part1 = Integer.parseInt(JOptionPane.showInputDialog("Complex Number \nType part 1:"));
                    int part2 = Integer.parseInt(JOptionPane.showInputDialog("Type part 2:"));
                    int integer = Integer.parseInt(JOptionPane.showInputDialog("Type the integer: "));
                    multiComplexWithInteger(part1,part2,integer);
                    break;
                case 5:
                    break;
                default:
                    JOptionPane.showMessageDialog(null,
                            "Type a correct option");
            }

        } while (option != 5);
    }
}